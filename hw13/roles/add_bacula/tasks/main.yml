---
# tasks file for add_bacula

- name: add bacula packages
  yum:
    name:
      - bacula-director
      - bacula-storage
      - bacula-console
    state: latest

- name: Check if bacula db exists
  become_user: postgres
  command:
    psql -qAt -c "SELECT datname FROM pg_database"
  register: db_bacula_present

- name: Create bacula DB
  become_user: postgres
  action: command
    /usr/libexec/bacula/create_postgresql_database
  when: db_bacula_present.stdout.find('bacula') == -1

- name: Check tables in bacula DB
  become_user: postgres
  command:
    psql -d bacula -qAt -c "select table_name from information_schema.tables where table_schema = 'public'"
  register: db_bacula_tables_present

- name: Create bacula DB tables
  become_user: postgres
  action: command
    /usr/libexec/bacula/make_postgresql_tables
  when: db_bacula_tables_present.stdout.find('pathvisibility') == -1

- name: Check privileges in bacula DB
  become_user: postgres
  action: command
    psql -d bacula -qAt -c "SELECT grantee FROM information_schema.role_table_grants where table_name='pathvisibility'"
  register: db_bacula_priv_present

- name: Grant bacula priveleges
  become_user: postgres
  action: command
    /usr/libexec/bacula/grant_postgresql_privileges
  when: db_bacula_priv_present.stdout.find('bacula') == -1
# Bacula db password

- name: Add bacula pg_user password
  become: yes
  become_user: postgres
  postgresql_user:
    db: bacula
    name: bacula
    password: "{{ PG_BACULA_PASSWORD }}"

- name: Check bacula folders
  stat:
    path: "{{ item }}"
  register: folder_stats
  with_items: "{{ bacula_folders }}"

- name: Create backup and restore dirs
  file:
    path: "{{ item.item }}"
    state: directory
    owner: bacula
    group: bacula
    mode: 0755
  when: item.stat.exists == false
  with_items: "{{ folder_stats.results }}"

- name: Add .pgpass
  template:
    src: pgpass.j2
    dest: /var/spool/bacula/.pgpass
    owner: bacula
    group: bacula
    mode: 0600

- name: SElinux fix for bacula backup dir
  sefcontext: 
    target: '/opt/backups(/.*)?'
    setype: bacula_store_t
    state: present
    
- name: SElinux fix for bacula restore dir
  sefcontext:
    target: '/opt/restore(/.*)?'
    setype: bacula_store_t
    state: present

- name: Apply new SELinux file context to fs
  action: command
    restorecon -irv {{ item }}
  with_items:
    - /opt/backups
    - /opt/restore

- name: Add bacula-dir.conf
  template:
    src: bacula-dir.conf.j2
    dest: /etc/bacula/bacula-dir.conf
    owner: bacula
    group: bacula
    mode: 0600

- name: Add bacula-sd.conf
  template:
    src: bacula-sd.conf.j2
    dest: /etc/bacula/bacula-sd.conf
    owner: bacula
    group: bacula
    mode: 0600

- name: Start Bacula director
  systemd:
    name: bacula-dir
    state: started

- name: Start Bacula storage
  systemd:
    name: "{{ item }}"
    state: started
  with_items: "{{ bacula_services }}"
...
